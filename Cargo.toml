# @see https://doc.rust-lang.org/cargo/reference/manifest.html
[package]
authors = ["owent <admin@owent.net>"]
categories = ["network-programming", "web-programming::http-client"]
description = "ddns client for cloudflare and dnspod"
documentation = "https://github.com/owent/ddns-cli"
edition = "2021"
homepage = "https://crates.io/crates/ddns-cli"
keywords = ["ddns", "client", "dns"]
license = "MIT OR Apache-2.0"
name = "ddns-cli"
readme = "README.md"
repository = "https://github.com/owent/ddns-cli"
version = "0.3.2"

[[bin]]
name = "ddns-cli"

[dependencies]
bytes = "^1.1.0"
futures-core = "^0.3.19"
hex = ">=0.4.3"
lazy_static = "^1.4.0"
regex = "^1.5.4"
rustls = "^0.20.2"
serde_json = "^1.0.75"
slog-async = "^2.7.0"
time = ">=0.3.5"
uuid = "^1.3"

[dependencies.clap]
# default-features = false
features = ["std", "suggestions", "color", "cargo", "help"]
version = "^4"

[dependencies.futures]
features = ["std", "async-await"]
version = "^0.3.19"

[dependencies.http]
default-features = true
version = "^0.2.6"

[dependencies.reqwest]
default-features = true
features = ["default-tls", "gzip", "json", "multipart", "native-tls-vendored"]
version = "^0.11.9"

[dependencies.serde]
default-features = true
features = ["derive"]
version = "^1.0.133"

[dependencies.slog]
features = ["max_level_trace", "release_max_level_trace"]
version = "^2.7"

[dependencies.slog-envlogger]
optional = true
version = "^2.2"

[dependencies.slog-stdlog]
optional = true
version = "^4"

[dependencies.slog-term]
version = "^2.8.0"

[dependencies.tokio]
features = ["full"]
version = "^1.15.0"

[dependencies.async-std]
features = ["default", "tokio1"]
version = "^1.10.0"

[dev-dependencies]
criterion = "^0.4.0"

[features]
default = ["default-logger"]
default-logger = ["slog-stdlog", "slog-envlogger"]
system-alloc = []

# The development profile, used for `cargo build`.
[profile.dev]
opt-level = 0 # controls the `--opt-level` the compiler builds with.
# 0-1 is good for debugging. 2 is well-optimized. Max is 3.
debug = true # include debug information (debug symbols). Equivalent to
# `-C debuginfo=2` compiler flag.
rpath = false # controls whether compiler should set loader paths.
# If true, passes `-C rpath` flag to the compiler.
lto = false # Link Time Optimization usually reduces size of binaries
# and static libraries. Increases compilation time.
# If true, passes `-C lto` flag to the compiler.
debug-assertions = true # controls whether debug assertions are enabled
# (e.g. debug_assert!() and arithmetic overflow checks)
codegen-units = 4 # if > 1 enables parallel code generation which improves
# compile times, but prevents some optimizations.
# Passes `-C codegen-units`. Ignored when `lto = true`.
incremental = false
# panic = 'abort'    # panic strategy (`-C panic=...`), can also be 'abort'

# The release profile, used for `cargo build --release`.
[profile.release]
lto = true
codegen-units = 1
incremental = false
panic = 'abort'
opt-level = "z"
